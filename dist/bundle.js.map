{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/ramda/es/internal/_isPlaceholder.js","webpack:///./node_modules/ramda/es/internal/_curry1.js","webpack:///./node_modules/ramda/es/internal/_curry2.js","webpack:///./node_modules/ramda/es/internal/_concat.js","webpack:///./node_modules/ramda/es/internal/_arity.js","webpack:///./node_modules/ramda/es/internal/_curry3.js","webpack:///./node_modules/ramda/es/adjust.js","webpack:///./node_modules/ramda/es/internal/_isArray.js","webpack:///./node_modules/ramda/es/internal/_isString.js","webpack:///./node_modules/ramda/es/internal/_isArrayLike.js","webpack:///./node_modules/ramda/es/internal/_xwrap.js","webpack:///./node_modules/ramda/es/bind.js","webpack:///./node_modules/ramda/es/internal/_reduce.js","webpack:///./node_modules/ramda/es/internal/_has.js","webpack:///./node_modules/ramda/es/internal/_isArguments.js","webpack:///./node_modules/ramda/es/keys.js","webpack:///./node_modules/ramda/es/reduce.js","webpack:///./node_modules/ramda/es/internal/_isInteger.js","webpack:///./node_modules/ramda/es/type.js","webpack:///./node_modules/ramda/es/internal/_pipe.js","webpack:///./node_modules/ramda/es/internal/_checkForMethod.js","webpack:///./node_modules/ramda/es/slice.js","webpack:///./node_modules/ramda/es/tail.js","webpack:///./node_modules/ramda/es/reverse.js","webpack:///./node_modules/ramda/es/compose.js","webpack:///./node_modules/ramda/es/pipe.js","webpack:///./node_modules/ramda/es/internal/_arrayFromIterator.js","webpack:///./node_modules/ramda/es/internal/_containsWith.js","webpack:///./node_modules/ramda/es/identical.js","webpack:///./node_modules/ramda/es/internal/_equals.js","webpack:///./node_modules/ramda/es/internal/_functionName.js","webpack:///./node_modules/ramda/es/equals.js","webpack:///./node_modules/ramda/es/internal/_indexOf.js","webpack:///./node_modules/ramda/es/internal/_contains.js","webpack:///./node_modules/ramda/es/internal/_toISOString.js","webpack:///./node_modules/ramda/es/internal/_identity.js","webpack:///./node_modules/ramda/es/identity.js","webpack:///./node_modules/ramda/es/internal/_Set.js","webpack:///./node_modules/ramda/es/uniq.js","webpack:///./node_modules/ramda/es/uniqBy.js","webpack:///./node_modules/ramda/es/internal/_assign.js","webpack:///./node_modules/ramda/es/internal/_objectAssign.js","webpack:///./node_modules/ramda/es/objOf.js","webpack:///./node_modules/ramda/es/internal/_stepCat.js","webpack:///./node_modules/ramda/es/test.js","webpack:///./node_modules/ramda/es/trim.js","webpack:///./node_modules/ramda/es/union.js","webpack:///./utils.js","webpack:///./index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_isPlaceholder","a","_curry1_curry1","fn","f1","arguments","length","apply","this","_curry2_curry2","f2","b","_b","_a","_concat","set1","set2","idx","len1","len2","result","_arity","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","Error","_curry3_curry3","f3","_c","_isArray","Array","isArray","val","toString","_isString","x","internal_isArrayLike","nodeType","XWrap","f","acc","_xwrap","es_bind","thisObj","_reduce_iterableReduce","xf","iter","step","next","done","_reduce_methodReduce","obj","methodName","_reduce_symIterator","Symbol","iterator","_reduce_reduce","list","len","_reduce_arrayReduce","reduce","TypeError","_has","prop","_isArguments_toString","internal_isArguments","keys_hasEnumBug","propertyIsEnumerable","keys_nonEnumerableProps","keys_hasArgsEnumBug","keys_contains","item","es_keys","keys","nIdx","ks","checkArgsLength","es_reduce","Number","isInteger","es_type","undefined","slice","_pipe","g","_checkForMethod_checkForMethod","methodname","es_slice","fromIndex","toIndex","es_tail","Infinity","es_reverse","split","reverse","join","compose_compose","_arrayFromIterator","push","_containsWith","pred","es_identical","_equals_uniqContentEquals","aIterator","bIterator","stackA","stackB","eq","_equals_equals","aItem","match","typeA","equals","constructor","String","valueOf","message","source","global","ignoreCase","multiline","sticky","unicode","size","entries","concat","values","keysA","extendedStackA","extendedStackB","key","es_equals","_indexOf_indexOf","inf","indexOf","_contains_contains","pad","Date","toISOString","_identity","es_identity","_Set_hasOrAdd","shouldAdd","set","prevSize","type","_items","_nativeSet","add","has","bIdx","internal_Set","_Set","Set","es_uniq","appliedItem","es_uniqBy","_assign","assign","target","output","nextKey","es_objOf","trim_ws","es_union","trim","utils","n1","n2","index_arr1","index_arrUnion","index_compararNumeros","index_arrUniq","console","log","sort","multi","div","nome","idade","sexo"],"mappings":"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","file":"./bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export default function _isPlaceholder(a) {\n       return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;\n}","import _isPlaceholder from './_isPlaceholder';\n\n/**\n * Optimized internal one-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curry1(fn) {\n  return function f1(a) {\n    if (arguments.length === 0 || _isPlaceholder(a)) {\n      return f1;\n    } else {\n      return fn.apply(this, arguments);\n    }\n  };\n}","import _curry1 from './_curry1';\nimport _isPlaceholder from './_isPlaceholder';\n\n/**\n * Optimized internal two-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curry2(fn) {\n  return function f2(a, b) {\n    switch (arguments.length) {\n      case 0:\n        return f2;\n      case 1:\n        return _isPlaceholder(a) ? f2 : _curry1(function (_b) {\n          return fn(a, _b);\n        });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b);\n        }) : fn(a, b);\n    }\n  };\n}","/**\n * Private `concat` function to merge two array-like objects.\n *\n * @private\n * @param {Array|Arguments} [set1=[]] An array-like object.\n * @param {Array|Arguments} [set2=[]] An array-like object.\n * @return {Array} A new, merged array.\n * @example\n *\n *      _concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n */\nexport default function _concat(set1, set2) {\n  set1 = set1 || [];\n  set2 = set2 || [];\n  var idx;\n  var len1 = set1.length;\n  var len2 = set2.length;\n  var result = [];\n\n  idx = 0;\n  while (idx < len1) {\n    result[result.length] = set1[idx];\n    idx += 1;\n  }\n  idx = 0;\n  while (idx < len2) {\n    result[result.length] = set2[idx];\n    idx += 1;\n  }\n  return result;\n}","export default function _arity(n, fn) {\n  /* eslint-disable no-unused-vars */\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.apply(this, arguments);\n      };\n    case 1:\n      return function (a0) {\n        return fn.apply(this, arguments);\n      };\n    case 2:\n      return function (a0, a1) {\n        return fn.apply(this, arguments);\n      };\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.apply(this, arguments);\n      };\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.apply(this, arguments);\n      };\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.apply(this, arguments);\n      };\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.apply(this, arguments);\n      };\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.apply(this, arguments);\n      };\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.apply(this, arguments);\n      };\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.apply(this, arguments);\n      };\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.apply(this, arguments);\n      };\n    default:\n      throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n  }\n}","import _curry1 from './_curry1';\nimport _curry2 from './_curry2';\nimport _isPlaceholder from './_isPlaceholder';\n\n/**\n * Optimized internal three-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curry3(fn) {\n  return function f3(a, b, c) {\n    switch (arguments.length) {\n      case 0:\n        return f3;\n      case 1:\n        return _isPlaceholder(a) ? f3 : _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        });\n      case 2:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f3 : _isPlaceholder(a) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _curry1(function (_c) {\n          return fn(a, b, _c);\n        });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3 : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function (_a, _b) {\n          return fn(_a, _b, c);\n        }) : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b, c);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b, c);\n        }) : _isPlaceholder(c) ? _curry1(function (_c) {\n          return fn(a, b, _c);\n        }) : fn(a, b, c);\n    }\n  };\n}","import _concat from './internal/_concat';\nimport _curry3 from './internal/_curry3';\n\n/**\n * Applies a function to the value at the given index of an array, returning a\n * new copy of the array with the element at the given index replaced with the\n * result of the function application.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig (a -> a) -> Number -> [a] -> [a]\n * @param {Function} fn The function to apply.\n * @param {Number} idx The index.\n * @param {Array|Arguments} list An array-like object whose value\n *        at the supplied index will be replaced.\n * @return {Array} A copy of the supplied array-like object with\n *         the element at index `idx` replaced with the value\n *         returned by applying `fn` to the existing element.\n * @see R.update\n * @example\n *\n *      R.adjust(R.add(10), 1, [1, 2, 3]);     //=> [1, 12, 3]\n *      R.adjust(R.add(10))(1)([1, 2, 3]);     //=> [1, 12, 3]\n * @symb R.adjust(f, -1, [a, b]) = [a, f(b)]\n * @symb R.adjust(f, 0, [a, b]) = [f(a), b]\n */\nvar adjust = /*#__PURE__*/_curry3(function adjust(fn, idx, list) {\n  if (idx >= list.length || idx < -list.length) {\n    return list;\n  }\n  var start = idx < 0 ? list.length : 0;\n  var _idx = start + idx;\n  var _list = _concat(list);\n  _list[_idx] = fn(list[_idx]);\n  return _list;\n});\nexport default adjust;","/**\n * Tests whether or not an object is an array.\n *\n * @private\n * @param {*} val The object to test.\n * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n * @example\n *\n *      _isArray([]); //=> true\n *      _isArray(null); //=> false\n *      _isArray({}); //=> false\n */\nexport default Array.isArray || function _isArray(val) {\n  return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';\n};","export default function _isString(x) {\n  return Object.prototype.toString.call(x) === '[object String]';\n}","import _curry1 from './_curry1';\nimport _isArray from './_isArray';\nimport _isString from './_isString';\n\n/**\n * Tests whether or not an object is similar to an array.\n *\n * @private\n * @category Type\n * @category List\n * @sig * -> Boolean\n * @param {*} x The object to test.\n * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n * @example\n *\n *      _isArrayLike([]); //=> true\n *      _isArrayLike(true); //=> false\n *      _isArrayLike({}); //=> false\n *      _isArrayLike({length: 10}); //=> false\n *      _isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n */\nvar _isArrayLike = /*#__PURE__*/_curry1(function isArrayLike(x) {\n  if (_isArray(x)) {\n    return true;\n  }\n  if (!x) {\n    return false;\n  }\n  if (typeof x !== 'object') {\n    return false;\n  }\n  if (_isString(x)) {\n    return false;\n  }\n  if (x.nodeType === 1) {\n    return !!x.length;\n  }\n  if (x.length === 0) {\n    return true;\n  }\n  if (x.length > 0) {\n    return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n  }\n  return false;\n});\nexport default _isArrayLike;","var XWrap = /*#__PURE__*/function () {\n  function XWrap(fn) {\n    this.f = fn;\n  }\n  XWrap.prototype['@@transducer/init'] = function () {\n    throw new Error('init not implemented on XWrap');\n  };\n  XWrap.prototype['@@transducer/result'] = function (acc) {\n    return acc;\n  };\n  XWrap.prototype['@@transducer/step'] = function (acc, x) {\n    return this.f(acc, x);\n  };\n\n  return XWrap;\n}();\n\nexport default function _xwrap(fn) {\n  return new XWrap(fn);\n}","import _arity from './internal/_arity';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Creates a function that is bound to a context.\n * Note: `R.bind` does not provide the additional argument-binding capabilities of\n * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @category Object\n * @sig (* -> *) -> {*} -> (* -> *)\n * @param {Function} fn The function to bind to context\n * @param {Object} thisObj The context to bind `fn` to\n * @return {Function} A function that will execute in the context of `thisObj`.\n * @see R.partial\n * @example\n *\n *      var log = R.bind(console.log, console);\n *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}\n *      // logs {a: 2}\n * @symb R.bind(f, o)(a, b) = f.call(o, a, b)\n */\nvar bind = /*#__PURE__*/_curry2(function bind(fn, thisObj) {\n  return _arity(fn.length, function () {\n    return fn.apply(thisObj, arguments);\n  });\n});\nexport default bind;","import _isArrayLike from './_isArrayLike';\nimport _xwrap from './_xwrap';\nimport bind from '../bind';\n\nfunction _arrayReduce(xf, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    acc = xf['@@transducer/step'](acc, list[idx]);\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n    idx += 1;\n  }\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _iterableReduce(xf, acc, iter) {\n  var step = iter.next();\n  while (!step.done) {\n    acc = xf['@@transducer/step'](acc, step.value);\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n    step = iter.next();\n  }\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _methodReduce(xf, acc, obj, methodName) {\n  return xf['@@transducer/result'](obj[methodName](bind(xf['@@transducer/step'], xf), acc));\n}\n\nvar symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\n\nexport default function _reduce(fn, acc, list) {\n  if (typeof fn === 'function') {\n    fn = _xwrap(fn);\n  }\n  if (_isArrayLike(list)) {\n    return _arrayReduce(fn, acc, list);\n  }\n  if (typeof list['fantasy-land/reduce'] === 'function') {\n    return _methodReduce(fn, acc, list, 'fantasy-land/reduce');\n  }\n  if (list[symIterator] != null) {\n    return _iterableReduce(fn, acc, list[symIterator]());\n  }\n  if (typeof list.next === 'function') {\n    return _iterableReduce(fn, acc, list);\n  }\n  if (typeof list.reduce === 'function') {\n    return _methodReduce(fn, acc, list, 'reduce');\n  }\n\n  throw new TypeError('reduce: list must be array or iterable');\n}","export default function _has(prop, obj) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}","import _has from './_has';\n\nvar toString = Object.prototype.toString;\nvar _isArguments = function () {\n  return toString.call(arguments) === '[object Arguments]' ? function _isArguments(x) {\n    return toString.call(x) === '[object Arguments]';\n  } : function _isArguments(x) {\n    return _has('callee', x);\n  };\n};\n\nexport default _isArguments;","import _curry1 from './internal/_curry1';\nimport _has from './internal/_has';\nimport _isArguments from './internal/_isArguments';\n\n// cover IE < 9 keys issues\nvar hasEnumBug = ! /*#__PURE__*/{ toString: null }.propertyIsEnumerable('toString');\nvar nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n// Safari bug\nvar hasArgsEnumBug = /*#__PURE__*/function () {\n  'use strict';\n\n  return arguments.propertyIsEnumerable('length');\n}();\n\nvar contains = function contains(list, item) {\n  var idx = 0;\n  while (idx < list.length) {\n    if (list[idx] === item) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n};\n\n/**\n * Returns a list containing the names of all the enumerable own properties of\n * the supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own properties.\n * @see R.keysIn, R.values\n * @example\n *\n *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n */\nvar _keys = typeof Object.keys === 'function' && !hasArgsEnumBug ? function keys(obj) {\n  return Object(obj) !== obj ? [] : Object.keys(obj);\n} : function keys(obj) {\n  if (Object(obj) !== obj) {\n    return [];\n  }\n  var prop, nIdx;\n  var ks = [];\n  var checkArgsLength = hasArgsEnumBug && _isArguments(obj);\n  for (prop in obj) {\n    if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {\n      ks[ks.length] = prop;\n    }\n  }\n  if (hasEnumBug) {\n    nIdx = nonEnumerableProps.length - 1;\n    while (nIdx >= 0) {\n      prop = nonEnumerableProps[nIdx];\n      if (_has(prop, obj) && !contains(ks, prop)) {\n        ks[ks.length] = prop;\n      }\n      nIdx -= 1;\n    }\n  }\n  return ks;\n};\nvar keys = /*#__PURE__*/_curry1(_keys);\nexport default keys;","import _curry3 from './internal/_curry3';\nimport _reduce from './internal/_reduce';\n\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It may use\n * [`R.reduced`](#reduced) to shortcut the iteration.\n *\n * The arguments' order of [`reduceRight`](#reduceRight)'s iterator function\n * is *(value, acc)*.\n *\n * Note: `R.reduce` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduce` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n *\n * Dispatches to the `reduce` method of the third argument, if present. When\n * doing so, it is up to the user to handle the [`R.reduced`](#reduced)\n * shortcuting, as this is not implemented by `reduce`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduced, R.addIndex, R.reduceRight\n * @example\n *\n *      R.reduce(R.subtract, 0, [1, 2, 3, 4]) // => ((((0 - 1) - 2) - 3) - 4) = -10\n *      //          -               -10\n *      //         / \\              / \\\n *      //        -   4           -6   4\n *      //       / \\              / \\\n *      //      -   3   ==>     -3   3\n *      //     / \\              / \\\n *      //    -   2           -1   2\n *      //   / \\              / \\\n *      //  0   1            0   1\n *\n * @symb R.reduce(f, a, [b, c, d]) = f(f(f(a, b), c), d)\n */\nvar reduce = /*#__PURE__*/_curry3(_reduce);\nexport default reduce;","/**\n * Determine if the passed argument is an integer.\n *\n * @private\n * @param {*} n\n * @category Type\n * @return {Boolean}\n */\nexport default Number.isInteger || function _isInteger(n) {\n  return n << 0 === n;\n};","import _curry1 from './internal/_curry1';\n\n/**\n * Gives a single-word string description of the (native) type of a value,\n * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not\n * attempt to distinguish user Object types any further, reporting them all as\n * 'Object'.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Type\n * @sig (* -> {*}) -> String\n * @param {*} val The value to test\n * @return {String}\n * @example\n *\n *      R.type({}); //=> \"Object\"\n *      R.type(1); //=> \"Number\"\n *      R.type(false); //=> \"Boolean\"\n *      R.type('s'); //=> \"String\"\n *      R.type(null); //=> \"Null\"\n *      R.type([]); //=> \"Array\"\n *      R.type(/[A-z]/); //=> \"RegExp\"\n *      R.type(() => {}); //=> \"Function\"\n *      R.type(undefined); //=> \"Undefined\"\n */\nvar type = /*#__PURE__*/_curry1(function type(val) {\n  return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);\n});\nexport default type;","export default function _pipe(f, g) {\n  return function () {\n    return g.call(this, f.apply(this, arguments));\n  };\n}","import _isArray from './_isArray';\n\n/**\n * This checks whether a function has a [methodname] function. If it isn't an\n * array it will execute that function otherwise it will default to the ramda\n * implementation.\n *\n * @private\n * @param {Function} fn ramda implemtation\n * @param {String} methodname property to check for a custom implementation\n * @return {Object} Whatever the return value of the method is.\n */\nexport default function _checkForMethod(methodname, fn) {\n  return function () {\n    var length = arguments.length;\n    if (length === 0) {\n      return fn();\n    }\n    var obj = arguments[length - 1];\n    return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));\n  };\n}","import _checkForMethod from './internal/_checkForMethod';\nimport _curry3 from './internal/_curry3';\n\n/**\n * Returns the elements of the given list or string (or object with a `slice`\n * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\n *\n * Dispatches to the `slice` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @sig Number -> Number -> String -> String\n * @param {Number} fromIndex The start index (inclusive).\n * @param {Number} toIndex The end index (exclusive).\n * @param {*} list\n * @return {*}\n * @example\n *\n *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\n *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\n *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\n *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\n *      R.slice(0, 3, 'ramda');                     //=> 'ram'\n */\nvar slice = /*#__PURE__*/_curry3( /*#__PURE__*/_checkForMethod('slice', function slice(fromIndex, toIndex, list) {\n  return Array.prototype.slice.call(list, fromIndex, toIndex);\n}));\nexport default slice;","import _checkForMethod from './internal/_checkForMethod';\nimport _curry1 from './internal/_curry1';\nimport slice from './slice';\n\n/**\n * Returns all but the first element of the given list or string (or object\n * with a `tail` method).\n *\n * Dispatches to the `slice` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.head, R.init, R.last\n * @example\n *\n *      R.tail([1, 2, 3]);  //=> [2, 3]\n *      R.tail([1, 2]);     //=> [2]\n *      R.tail([1]);        //=> []\n *      R.tail([]);         //=> []\n *\n *      R.tail('abc');  //=> 'bc'\n *      R.tail('ab');   //=> 'b'\n *      R.tail('a');    //=> ''\n *      R.tail('');     //=> ''\n */\nvar tail = /*#__PURE__*/_curry1( /*#__PURE__*/_checkForMethod('tail', /*#__PURE__*/slice(1, Infinity)));\nexport default tail;","import _curry1 from './internal/_curry1';\nimport _isString from './internal/_isString';\n\n/**\n * Returns a new list or string with the elements or characters in reverse\n * order.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {Array|String} list\n * @return {Array|String}\n * @example\n *\n *      R.reverse([1, 2, 3]);  //=> [3, 2, 1]\n *      R.reverse([1, 2]);     //=> [2, 1]\n *      R.reverse([1]);        //=> [1]\n *      R.reverse([]);         //=> []\n *\n *      R.reverse('abc');      //=> 'cba'\n *      R.reverse('ab');       //=> 'ba'\n *      R.reverse('a');        //=> 'a'\n *      R.reverse('');         //=> ''\n */\nvar reverse = /*#__PURE__*/_curry1(function reverse(list) {\n  return _isString(list) ? list.split('').reverse().join('') : Array.prototype.slice.call(list, 0).reverse();\n});\nexport default reverse;","import pipe from './pipe';\nimport reverse from './reverse';\n\n/**\n * Performs right-to-left function composition. The rightmost function may have\n * any arity; the remaining functions must be unary.\n *\n * **Note:** The result of compose is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)) -> ((a, b, ..., n) -> z)\n * @param {...Function} ...functions The functions to compose\n * @return {Function}\n * @see R.pipe\n * @example\n *\n *      var classyGreeting = (firstName, lastName) => \"The name's \" + lastName + \", \" + firstName + \" \" + lastName\n *      var yellGreeting = R.compose(R.toUpper, classyGreeting);\n *      yellGreeting('James', 'Bond'); //=> \"THE NAME'S BOND, JAMES BOND\"\n *\n *      R.compose(Math.abs, R.add(1), R.multiply(2))(-4) //=> 7\n *\n * @symb R.compose(f, g, h)(a, b) = f(g(h(a, b)))\n */\nexport default function compose() {\n  if (arguments.length === 0) {\n    throw new Error('compose requires at least one argument');\n  }\n  return pipe.apply(this, reverse(arguments));\n}","import _arity from './internal/_arity';\nimport _pipe from './internal/_pipe';\nimport reduce from './reduce';\nimport tail from './tail';\n\n/**\n * Performs left-to-right function composition. The leftmost function may have\n * any arity; the remaining functions must be unary.\n *\n * In some libraries this function is named `sequence`.\n *\n * **Note:** The result of pipe is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> ((a, b, ..., n) -> z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.compose\n * @example\n *\n *      var f = R.pipe(Math.pow, R.negate, R.inc);\n *\n *      f(3, 4); // -(3^4) + 1\n * @symb R.pipe(f, g, h)(a, b) = h(g(f(a, b)))\n */\nexport default function pipe() {\n  if (arguments.length === 0) {\n    throw new Error('pipe requires at least one argument');\n  }\n  return _arity(arguments[0].length, reduce(_pipe, arguments[0], tail(arguments)));\n}","export default function _arrayFromIterator(iter) {\n  var list = [];\n  var next;\n  while (!(next = iter.next()).done) {\n    list.push(next.value);\n  }\n  return list;\n}","export default function _containsWith(pred, x, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (pred(x, list[idx])) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n}","import _curry2 from './internal/_curry2';\n\n/**\n * Returns true if its arguments are identical, false otherwise. Values are\n * identical if they reference the same memory. `NaN` is identical to `NaN`;\n * `0` and `-0` are not identical.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      var o = {};\n *      R.identical(o, o); //=> true\n *      R.identical(1, 1); //=> true\n *      R.identical(1, '1'); //=> false\n *      R.identical([], []); //=> false\n *      R.identical(0, -0); //=> false\n *      R.identical(NaN, NaN); //=> true\n */\nvar identical = /*#__PURE__*/_curry2(function identical(a, b) {\n  // SameValue algorithm\n  if (a === b) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    return a !== 0 || 1 / a === 1 / b;\n  } else {\n    // Step 6.a: NaN == NaN\n    return a !== a && b !== b;\n  }\n});\nexport default identical;","import _arrayFromIterator from './_arrayFromIterator';\nimport _containsWith from './_containsWith';\nimport _functionName from './_functionName';\nimport _has from './_has';\nimport identical from '../identical';\nimport keys from '../keys';\nimport type from '../type';\n\n/**\n * private _uniqContentEquals function.\n * That function is checking equality of 2 iterator contents with 2 assumptions\n * - iterators lengths are the same\n * - iterators values are unique\n *\n * false-positive result will be returned for comparision of, e.g.\n * - [1,2,3] and [1,2,3,4]\n * - [1,1,1] and [1,2,3]\n * */\n\nfunction _uniqContentEquals(aIterator, bIterator, stackA, stackB) {\n  var a = _arrayFromIterator(aIterator);\n  var b = _arrayFromIterator(bIterator);\n\n  function eq(_a, _b) {\n    return _equals(_a, _b, stackA.slice(), stackB.slice());\n  }\n\n  // if *a* array contains any element that is not included in *b*\n  return !_containsWith(function (b, aItem) {\n    return !_containsWith(eq, aItem, b);\n  }, b, a);\n}\n\nexport default function _equals(a, b, stackA, stackB) {\n  if (identical(a, b)) {\n    return true;\n  }\n\n  var typeA = type(a);\n\n  if (typeA !== type(b)) {\n    return false;\n  }\n\n  if (a == null || b == null) {\n    return false;\n  }\n\n  if (typeof a['fantasy-land/equals'] === 'function' || typeof b['fantasy-land/equals'] === 'function') {\n    return typeof a['fantasy-land/equals'] === 'function' && a['fantasy-land/equals'](b) && typeof b['fantasy-land/equals'] === 'function' && b['fantasy-land/equals'](a);\n  }\n\n  if (typeof a.equals === 'function' || typeof b.equals === 'function') {\n    return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);\n  }\n\n  switch (typeA) {\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n      if (typeof a.constructor === 'function' && _functionName(a.constructor) === 'Promise') {\n        return a === b;\n      }\n      break;\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n      if (!(typeof a === typeof b && identical(a.valueOf(), b.valueOf()))) {\n        return false;\n      }\n      break;\n    case 'Date':\n      if (!identical(a.valueOf(), b.valueOf())) {\n        return false;\n      }\n      break;\n    case 'Error':\n      return a.name === b.name && a.message === b.message;\n    case 'RegExp':\n      if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {\n        return false;\n      }\n      break;\n  }\n\n  var idx = stackA.length - 1;\n  while (idx >= 0) {\n    if (stackA[idx] === a) {\n      return stackB[idx] === b;\n    }\n    idx -= 1;\n  }\n\n  switch (typeA) {\n    case 'Map':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.entries(), b.entries(), stackA.concat([a]), stackB.concat([b]));\n    case 'Set':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.values(), b.values(), stackA.concat([a]), stackB.concat([b]));\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n    case 'Date':\n    case 'Error':\n    case 'RegExp':\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'ArrayBuffer':\n      break;\n    default:\n      // Values of other types are only equal if identical.\n      return false;\n  }\n\n  var keysA = keys(a);\n  if (keysA.length !== keys(b).length) {\n    return false;\n  }\n\n  var extendedStackA = stackA.concat([a]);\n  var extendedStackB = stackB.concat([b]);\n\n  idx = keysA.length - 1;\n  while (idx >= 0) {\n    var key = keysA[idx];\n    if (!(_has(key, b) && _equals(b[key], a[key], extendedStackA, extendedStackB))) {\n      return false;\n    }\n    idx -= 1;\n  }\n  return true;\n}","export default function _functionName(f) {\n  // String(x => x) evaluates to \"x => x\", so the pattern may not match.\n  var match = String(f).match(/^function (\\w*)/);\n  return match == null ? '' : match[1];\n}","import _curry2 from './internal/_curry2';\nimport _equals from './internal/_equals';\n\n/**\n * Returns `true` if its arguments are equivalent, `false` otherwise. Handles\n * cyclical data structures.\n *\n * Dispatches symmetrically to the `equals` methods of both arguments, if\n * present.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> b -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      R.equals(1, 1); //=> true\n *      R.equals(1, '1'); //=> false\n *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n *\n *      var a = {}; a.v = a;\n *      var b = {}; b.v = b;\n *      R.equals(a, b); //=> true\n */\nvar equals = /*#__PURE__*/_curry2(function equals(a, b) {\n  return _equals(a, b, [], []);\n});\nexport default equals;","import equals from '../equals';\n\nexport default function _indexOf(list, a, idx) {\n  var inf, item;\n  // Array.prototype.indexOf doesn't exist below IE9\n  if (typeof list.indexOf === 'function') {\n    switch (typeof a) {\n      case 'number':\n        if (a === 0) {\n          // manually crawl the list to distinguish between +0 and -0\n          inf = 1 / a;\n          while (idx < list.length) {\n            item = list[idx];\n            if (item === 0 && 1 / item === inf) {\n              return idx;\n            }\n            idx += 1;\n          }\n          return -1;\n        } else if (a !== a) {\n          // NaN\n          while (idx < list.length) {\n            item = list[idx];\n            if (typeof item === 'number' && item !== item) {\n              return idx;\n            }\n            idx += 1;\n          }\n          return -1;\n        }\n        // non-zero numbers can utilise Set\n        return list.indexOf(a, idx);\n\n      // all these types can utilise Set\n      case 'string':\n      case 'boolean':\n      case 'function':\n      case 'undefined':\n        return list.indexOf(a, idx);\n\n      case 'object':\n        if (a === null) {\n          // null can utilise Set\n          return list.indexOf(a, idx);\n        }\n    }\n  }\n  // anything else not covered above, defer to R.equals\n  while (idx < list.length) {\n    if (equals(list[idx], a)) {\n      return idx;\n    }\n    idx += 1;\n  }\n  return -1;\n}","import _indexOf from './_indexOf';\n\nexport default function _contains(a, list) {\n  return _indexOf(list, a, 0) >= 0;\n}","/**\n * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.\n */\nvar pad = function pad(n) {\n  return (n < 10 ? '0' : '') + n;\n};\n\nvar _toISOString = typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {\n  return d.toISOString();\n} : function _toISOString(d) {\n  return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';\n};\n\nexport default _toISOString;","export default function _identity(x) {\n  return x;\n}","import _curry1 from './internal/_curry1';\nimport _identity from './internal/_identity';\n\n/**\n * A function that does nothing but return the parameter supplied to it. Good\n * as a default or placeholder function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> a\n * @param {*} x The value to return.\n * @return {*} The input value, `x`.\n * @example\n *\n *      R.identity(1); //=> 1\n *\n *      var obj = {};\n *      R.identity(obj) === obj; //=> true\n * @symb R.identity(a) = a\n */\nvar identity = /*#__PURE__*/_curry1(_identity);\nexport default identity;","import _contains from './_contains';\n\nvar _Set = /*#__PURE__*/function () {\n  function _Set() {\n    /* globals Set */\n    this._nativeSet = typeof Set === 'function' ? new Set() : null;\n    this._items = {};\n  }\n\n  // until we figure out why jsdoc chokes on this\n  // @param item The item to add to the Set\n  // @returns {boolean} true if the item did not exist prior, otherwise false\n  //\n  _Set.prototype.add = function (item) {\n    return !hasOrAdd(item, true, this);\n  };\n\n  //\n  // @param item The item to check for existence in the Set\n  // @returns {boolean} true if the item exists in the Set, otherwise false\n  //\n  _Set.prototype.has = function (item) {\n    return hasOrAdd(item, false, this);\n  };\n\n  //\n  // Combines the logic for checking whether an item is a member of the set and\n  // for adding a new item to the set.\n  //\n  // @param item       The item to check or add to the Set instance.\n  // @param shouldAdd  If true, the item will be added to the set if it doesn't\n  //                   already exist.\n  // @param set        The set instance to check or add to.\n  // @return {boolean} true if the item already existed, otherwise false.\n  //\n  return _Set;\n}();\n\nfunction hasOrAdd(item, shouldAdd, set) {\n  var type = typeof item;\n  var prevSize, newSize;\n  switch (type) {\n    case 'string':\n    case 'number':\n      // distinguish between +0 and -0\n      if (item === 0 && 1 / item === -Infinity) {\n        if (set._items['-0']) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items['-0'] = true;\n          }\n          return false;\n        }\n      }\n      // these types can all utilise the native Set\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n          set._nativeSet.add(item);\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = {};\n            set._items[type][item] = true;\n          }\n          return false;\n        } else if (item in set._items[type]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][item] = true;\n          }\n          return false;\n        }\n      }\n\n    case 'boolean':\n      // set._items['boolean'] holds a two element array\n      // representing [ falseExists, trueExists ]\n      if (type in set._items) {\n        var bIdx = item ? 1 : 0;\n        if (set._items[type][bIdx]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][bIdx] = true;\n          }\n          return false;\n        }\n      } else {\n        if (shouldAdd) {\n          set._items[type] = item ? [false, true] : [true, false];\n        }\n        return false;\n      }\n\n    case 'function':\n      // compare functions for reference equality\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n          set._nativeSet.add(item);\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = [item];\n          }\n          return false;\n        }\n        if (!_contains(item, set._items[type])) {\n          if (shouldAdd) {\n            set._items[type].push(item);\n          }\n          return false;\n        }\n        return true;\n      }\n\n    case 'undefined':\n      if (set._items[type]) {\n        return true;\n      } else {\n        if (shouldAdd) {\n          set._items[type] = true;\n        }\n        return false;\n      }\n\n    case 'object':\n      if (item === null) {\n        if (!set._items['null']) {\n          if (shouldAdd) {\n            set._items['null'] = true;\n          }\n          return false;\n        }\n        return true;\n      }\n    /* falls through */\n    default:\n      // reduce the search size of heterogeneous sets by creating buckets\n      // for each type.\n      type = Object.prototype.toString.call(item);\n      if (!(type in set._items)) {\n        if (shouldAdd) {\n          set._items[type] = [item];\n        }\n        return false;\n      }\n      // scan through all previously applied items\n      if (!_contains(item, set._items[type])) {\n        if (shouldAdd) {\n          set._items[type].push(item);\n        }\n        return false;\n      }\n      return true;\n  }\n}\n\n// A simple Set type that honours R.equals semantics\nexport default _Set;","import identity from './identity';\nimport uniqBy from './uniqBy';\n\n/**\n * Returns a new list containing only one copy of each element in the original\n * list. [`R.equals`](#equals) is used to determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      R.uniq([1, 1, 2, 1]); //=> [1, 2]\n *      R.uniq([1, '1']);     //=> [1, '1']\n *      R.uniq([[42], [42]]); //=> [[42]]\n */\nvar uniq = /*#__PURE__*/uniqBy(identity);\nexport default uniq;","import _Set from './internal/_Set';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied function to\n * each list element. Prefers the first item if the supplied function produces\n * the same value on two items. [`R.equals`](#equals) is used for comparison.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> b) -> [a] -> [a]\n * @param {Function} fn A function used to produce a value to use during comparisons.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      R.uniqBy(Math.abs, [-1, -5, 2, 10, 1, 2]); //=> [-1, -5, 2, 10]\n */\nvar uniqBy = /*#__PURE__*/_curry2(function uniqBy(fn, list) {\n  var set = new _Set();\n  var result = [];\n  var idx = 0;\n  var appliedItem, item;\n\n  while (idx < list.length) {\n    item = list[idx];\n    appliedItem = fn(item);\n    if (set.add(appliedItem)) {\n      result.push(item);\n    }\n    idx += 1;\n  }\n  return result;\n});\nexport default uniqBy;","import _objectAssign from './_objectAssign';\n\nexport default typeof Object.assign === 'function' ? Object.assign : _objectAssign;","import _has from './_has';\n\n// Based on https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\nexport default function _objectAssign(target) {\n  if (target == null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  var idx = 1;\n  var length = arguments.length;\n  while (idx < length) {\n    var source = arguments[idx];\n    if (source != null) {\n      for (var nextKey in source) {\n        if (_has(nextKey, source)) {\n          output[nextKey] = source[nextKey];\n        }\n      }\n    }\n    idx += 1;\n  }\n  return output;\n}","import _curry2 from './internal/_curry2';\n\n/**\n * Creates an object containing a single key:value pair.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Object\n * @sig String -> a -> {String:a}\n * @param {String} key\n * @param {*} val\n * @return {Object}\n * @see R.pair\n * @example\n *\n *      var matchPhrases = R.compose(\n *        R.objOf('must'),\n *        R.map(R.objOf('match_phrase'))\n *      );\n *      matchPhrases(['foo', 'bar', 'baz']); //=> {must: [{match_phrase: 'foo'}, {match_phrase: 'bar'}, {match_phrase: 'baz'}]}\n */\nvar objOf = /*#__PURE__*/_curry2(function objOf(key, val) {\n  var obj = {};\n  obj[key] = val;\n  return obj;\n});\nexport default objOf;","import _assign from './_assign';\nimport _identity from './_identity';\nimport _isArrayLike from './_isArrayLike';\nimport _isTransformer from './_isTransformer';\nimport objOf from '../objOf';\n\nvar _stepCatArray = {\n  '@@transducer/init': Array,\n  '@@transducer/step': function (xs, x) {\n    xs.push(x);\n    return xs;\n  },\n  '@@transducer/result': _identity\n};\nvar _stepCatString = {\n  '@@transducer/init': String,\n  '@@transducer/step': function (a, b) {\n    return a + b;\n  },\n  '@@transducer/result': _identity\n};\nvar _stepCatObject = {\n  '@@transducer/init': Object,\n  '@@transducer/step': function (result, input) {\n    return _assign(result, _isArrayLike(input) ? objOf(input[0], input[1]) : input);\n  },\n  '@@transducer/result': _identity\n};\n\nexport default function _stepCat(obj) {\n  if (_isTransformer(obj)) {\n    return obj;\n  }\n  if (_isArrayLike(obj)) {\n    return _stepCatArray;\n  }\n  if (typeof obj === 'string') {\n    return _stepCatString;\n  }\n  if (typeof obj === 'object') {\n    return _stepCatObject;\n  }\n  throw new Error('Cannot create transformer for ' + obj);\n}","import _cloneRegExp from './internal/_cloneRegExp';\nimport _curry2 from './internal/_curry2';\nimport _isRegExp from './internal/_isRegExp';\nimport toString from './toString';\n\n/**\n * Determines whether a given string matches a given regular expression.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category String\n * @sig RegExp -> String -> Boolean\n * @param {RegExp} pattern\n * @param {String} str\n * @return {Boolean}\n * @see R.match\n * @example\n *\n *      R.test(/^x/, 'xyz'); //=> true\n *      R.test(/^y/, 'xyz'); //=> false\n */\nvar test = /*#__PURE__*/_curry2(function test(pattern, str) {\n  if (!_isRegExp(pattern)) {\n    throw new TypeError('‘test’ requires a value of type RegExp as its first argument; received ' + toString(pattern));\n  }\n  return _cloneRegExp(pattern).test(str);\n});\nexport default test;","import _curry1 from './internal/_curry1';\n\nvar ws = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' + '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028' + '\\u2029\\uFEFF';\nvar zeroWidth = '\\u200b';\nvar hasProtoTrim = typeof String.prototype.trim === 'function';\n/**\n * Removes (strips) whitespace from both ends of the string.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to trim.\n * @return {String} Trimmed version of `str`.\n * @example\n *\n *      R.trim('   xyz  '); //=> 'xyz'\n *      R.map(R.trim, R.split(',', 'x, y, z')); //=> ['x', 'y', 'z']\n */\nvar _trim = !hasProtoTrim || /*#__PURE__*/ws.trim() || ! /*#__PURE__*/zeroWidth.trim() ? function trim(str) {\n  var beginRx = new RegExp('^[' + ws + '][' + ws + ']*');\n  var endRx = new RegExp('[' + ws + '][' + ws + ']*$');\n  return str.replace(beginRx, '').replace(endRx, '');\n} : function trim(str) {\n  return str.trim();\n};\nvar trim = /*#__PURE__*/_curry1(_trim);\nexport default trim;","import _concat from './internal/_concat';\nimport _curry2 from './internal/_curry2';\nimport compose from './compose';\nimport uniq from './uniq';\n\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of the elements\n * of each list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} as The first list.\n * @param {Array} bs The second list.\n * @return {Array} The first and second lists concatenated, with\n *         duplicates removed.\n * @example\n *\n *      R.union([1, 2, 3], [2, 3, 4]); //=> [1, 2, 3, 4]\n */\nvar union = /*#__PURE__*/_curry2( /*#__PURE__*/compose(uniq, _concat));\nexport default union;","\nconst configPessoaFisica = {\n  nome: 'templateNome',\n  idade: 'templateCalculoIdadede',\n  sexo: 'templateCalculoSexo',\n};\n\nconst PI = 3.14;\n\nfunction sum(n1, n2) {\n  return n1 + n2;\n}\n\nfunction multi(n1, n2) {\n  return n1 * n2;\n}\n\nfunction div(n1, n2) {\n  return n1 / n2;\n}\n\n// exportas tudo, não é uma boa pratica\n// export * as utils\n\n// mesmo tipo de expoortacao (named export), mas com outra sintaxe\n// possibilidade de exportar com outro nome\n// deve ser importado com o nome da exportacao, do contratio pode  tomar o seguinte\n// erro: \"export 'div' was not found in './utils'\nexport { multi, div as divisao, PI, configPessoaFisica };\n\n// named export\n// ter vários exports dentro de um mesmo arquiv\n// só pode chamar com um mesmo nome\n// import precisa ser feito atraves de chaves\nexport function sub(n1, n2) {\n  return n1 - n2;\n}\n\n// método principal\n// só pode haver default por arquivo\n// pode ser importado com qualquer nome\n// nao precisa utilizar chaves\nexport default sum;\n\n","// import * as R from 'ramda';\nimport { union, uniq } from 'ramda';\n// import somar from './utils';\nimport somar, { sub, multi as multiplicar, divisao, PI, configPessoaFisica } from './utils';\n\nconst arr1 = [1, 2, 3, 4, 7, 8, 1, 3, 5, 110];\nconst arr2 = [16, 44, 4, 5, 99, 0, 1, 2, 77, 88, 7];\n\nconst arrUnion = union(arr1, arr2);\n\nfunction compararNumeros(a, b) {\n  return a - b;\n}\nconst arrUniq = uniq(arr1);\n\nconsole.log(arrUnion.sort(compararNumeros));\nconsole.log(arrUniq.sort(compararNumeros));\nconsole.log(somar(1, 1));\nconsole.log(sub('-10c', 3));\nconsole.log(multiplicar(10, 3));\nconsole.log(divisao(10, 3));\nconsole.log(PI);\nconsole.log(configPessoaFisica);\n"],"sourceRoot":""}